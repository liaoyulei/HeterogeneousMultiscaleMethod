function a_H= HMM(a, vertices, meshes, free, phix, T)
wg = [0.050844906370207; 0.050844906370207; 0.050844906370207; 0.116786275726379; 0.116786275726379; 0.116786275726379; 0.082851075618374; 0.082851075618374; 0.082851075618374; 0.082851075618374; 0.082851075618374; 0.082851075618374];
ld = [
    0.873821971016996, 0.063089014491502, 0.063089014491502;
    0.063089014491502, 0.873821971016996, 0.063089014491502;
    0.063089014491502, 0.063089014491502, 0.873821971016996;
    0.501426509658179, 0.249286745170910, 0.249286745170910;
    0.249286745170910, 0.501426509658179, 0.249286745170910;
    0.249286745170910, 0.249286745170910, 0.501426509658179;
    0.636502499121399, 0.310352451033785, 0.053145049844816;
    0.636502499121399, 0.053145049844816, 0.310352451033785;
    0.310352451033785, 0.636502499121399, 0.053145049844816;
    0.310352451033785, 0.053145049844816, 0.636502499121399;
    0.053145049844816, 0.636502499121399, 0.310352451033785;
    0.053145049844816, 0.310352451033785, 0.636502499121399;
];
A = zeros(size(vertices, 2)); %Nv-by-Nv
for k = 1: size(meshes, 2)
	v1 = vertices(:, meshes(1, k));
	v2 = vertices(:, meshes(2, k));
	v3 = vertices(:, meshes(3, k));
	jacobi = T(v1(1), v2(1), v3(1), v1(2), v2(2), v3(2));
	vx = phix(v1(1), v2(1), v3(1), v1(2), v2(2), v3(2)); %3-by-2
	for l = 1: size(wg, 1)
		x = v1 * ld(l, 1) + v2 * ld(l, 2) + v3 * ld(l, 3);
		A(meshes(:, k), meshes(:, k)) = A(meshes(:, k), meshes(:, k)) + wg(l) * jacobi * vx * a(x) * vx'; 
	end
end
A = sparse(A); %Nv-by-Nv
c = vertices' .* ~free'; %Nv-by-2
b = -A * c; %Nv-by-2
c(free, :) = A(free, free) \ b(free, :); %Nv-by-2
a_H = zeros(2);
for k = 1: size(meshes, 2)
	v1 = vertices(:, meshes(1, k));
	v2 = vertices(:, meshes(2, k));
	v3 = vertices(:, meshes(3, k));
	jacobi = T(v1(1), v2(1), v3(1), v1(2), v2(2), v3(2));
	vx = phix(v1(1), v2(1), v3(1), v1(2), v2(2), v3(2)); %3-by-2
	for l = 1: size(wg, 1)
		x = v1 * ld(l, 1) + v2 * ld(l, 2) + v3 * ld(l, 3);
		a_H = a_H + wg(l) * jacobi * a(x) * vx' * c(meshes(:, k), :);
	end
end
end